plugins {
    id 'multiloader-common'
    id 'net.neoforged.moddev'
}

repositories {
    mavenLocal()
}

neoForge {
    neoFormVersion = neo_form_version
    // Automatically enable AccessTransformers if the file exists
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnly group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'

//    // bundled by MC
    compileOnly 'org.ow2.asm:asm:9.6'
    compileOnly 'org.ow2.asm:asm-tree:9.6'

    // TODO: decouple this out of my local maven repo
    compileOnly("net.terradevelopment.traits4j:traits4j:1.0.3-SNAPSHOT") {
        exclude group: "org.ow2.asm", module: "asm"
        exclude group: "org.ow2.asm", module: "asm-tree"
    }

}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
}

